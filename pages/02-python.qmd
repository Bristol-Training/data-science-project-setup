---
title: "Python Environment Setup"
format: html
---

Here we show you how to setup a python project. For most
python projects, [uv](https://docs.astral.sh/uv/) will be 
the best choice. For notes on when you may want to use other package managers, see [here](./05-FAQs.qmd#)

In the [previous section](./01-initial-setup.qmd), we showed you 
how to open a terminal, create a folder, and move "into" the 
folder. You will need to do this for every data science project.

## Install Package Manager

Package manager installation should only need
to be done **once** on your computer.

Instructions are included below. If you encounter any issues, see [here](https://docs.astral.sh/uv/getting-started/installation/) for more installation methods to try. Or contact the JGI team

## Install UV

::: {.panel-tabset}

### Windows

Open Command Prompt and run:

```bat
winget install astral-uv.uv
```

### Mac

Open Terminal and run:

```bash
curl -Ls https://astral.sh/uv/install.sh | bash
```

### Linux

Open Terminal and run:

```bash
curl -Ls https://astral.sh/uv/install.sh | bash
```
:::

After installation, check that uv is available by 
typing `uv --version`, then pressing enter. You may need to restart your Command Prompt/Terminal for the changes to take effect.

## Move into Project Directory

Firstly, it is essential to:

1. Open your Command Prompt/Terminal.
2. Create or navigate to your project directory.

If you have not done this, or it is not clear how to do so, please refer to the [previous section](./01-initial-setup.qmd).

To check you are in the correct directory, enter the following
command

::: {.panel-tabset}

### Windows
```bat
cd
```

### Mac
```bash
pwd
```

### Linux

```bash
pwd
```
:::

### Create a Virtual Environment

Enter the following command to create a minimal virtual environment:

```bash
uv init --bare
```

### Install Packages

For all projects we need jupyterlab. This can be installed with:

```bash
uv add jupyterlab
```

For the "Introduction to Data Analysis in Python" course (see [here](https://bristol-training.github.io/introduction-to-data-analysis-in-python/)), you would need the `pandas` and `seaborn` package. You can install this with:

```bash
uv add pandas seaborn
```

Generally speaking, to add a package to your environment, you can use the following command:

```bash
uv add <package-name>
```

Replace `<package-name>` with the name of the package you want to install.


## Opening JupyterLab

Now you can open JupyterLab with:

```bash
uv run jupyter lab
```

This will take some time, and you will see text being
printed in the terminal. Once JupyterLab is running, a browser
window should pop open. This window should like similar to
the image below.

![JupyterLab Window](../assets/jupyterlab.png)

## Create a Notebook

To create a notebook, click the "Notebook" icon in the JupyterLab launcher. The window should now look like this:

![JupyterLab Notebook, with key features highlighted with arrows and blue boxes.](../assets/jupyterlab-notebook.png)

In each cell, python code can be entered. It can be run by clicking the "Run" button or by pressing `Shift + Enter`.

## Summary

Well done, you have created an interactive JupyterLab environment for your Python project! You should now be able to follow along
with our [Python courses](https://bristol-training.github.io/courses.html#python). 

The steps in this page are crucial for setting up your Python environment effectively, and we recommend you follow these for your
own projects, as well as for our courses.
